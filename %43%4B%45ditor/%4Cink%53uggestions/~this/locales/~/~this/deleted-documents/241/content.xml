<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="CKEditor.LinkSuggestions" locale="">
  <web>CKEditor</web>
  <name>LinkSuggestions</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>XWiki.SvenHoyer</creator>
  <creationDate>1533911983000</creationDate>
  <versions>head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2018.11.21.10.07.17;	author XWiki_2ESvenHoyer;	state full;
branches;
next	;


desc
@@


1.1
log
@Install extension [org.xwiki.contrib:application-ckeditor-ui/1.25]
@
text
@&lt;?xml version='1.1' encoding='UTF-8'?>
&lt;xwikidoc version="1.3" reference="CKEditor.LinkSuggestions" locale="">
  &lt;web>CKEditor&lt;/web>
  &lt;name>LinkSuggestions&lt;/name>
  &lt;language/>
  &lt;defaultLanguage/>
  &lt;translation>0&lt;/translation>
  &lt;creator>XWiki.SvenHoyer&lt;/creator>
  &lt;creationDate>1533911983000&lt;/creationDate>
  &lt;parent>Main.WebHome&lt;/parent>
  &lt;author>XWiki.SvenHoyer&lt;/author>
  &lt;contentAuthor>XWiki.SvenHoyer&lt;/contentAuthor>
  &lt;date>1542794837000&lt;/date>
  &lt;contentUpdateDate>1542794837000&lt;/contentUpdateDate>
  &lt;version>1.1&lt;/version>
  &lt;title/>
  &lt;comment>Install extension [org.xwiki.contrib:application-ckeditor-ui/1.25]&lt;/comment>
  &lt;minorEdit>false&lt;/minorEdit>
  &lt;syntaxId>xwiki/2.1&lt;/syntaxId>
  &lt;hidden>true&lt;/hidden>
  &lt;content>{{template name="hierarchy_macros.vm"/}}

{{include reference="XWiki.DocumentTreeMacros"/}}

{{velocity output="false"}}
#macro (setIcon $suggestion $icon)
  #set ($iconMetaData = $services.icon.getMetaData($icon))
  #if ($iconMetaData)
    #set ($suggestion.iconURL = "$!iconMetaData.url")
    #set ($suggestion.iconClass = "$!iconMetaData.cssClass")
  #else
    #set ($suggestion.iconURL = $xwiki.getSkinFile("icons/silk/${icon}.png"))
    #set ($suggestion.iconClass = '')
  #end
#end

#set ($entityTypeToLinkType = {
  'SPACE': 'space',
  'DOCUMENT': 'doc',
  'ATTACHMENT': 'attach'
})

#macro (getEntitySuggestion $entityReference $suggestion)
  #set ($typed = "$entityReference.type" != 'DOCUMENT')
  #set ($hint = "#hierarchy($entityReference {'local': true, 'excludeSelf': true, 'plain': true})")
  #set ($discard = $suggestion.putAll({
    'id': "$entityReference.type.toString().toLowerCase():$services.model.serialize($entityReference, 'default')",
    'url': $xwiki.getURL($entityReference),
    'reference': $services.model.serialize($entityReference, 'compact', $doc.documentReference),
    'type': $entityTypeToLinkType.get($entityReference.type.toString()),
    'typed': "$typed",
    'label': $entityReference.name,
    'hint': $hint.trim()
  }))
#end

#macro (getDocumentSuggestion $documentReference $suggestion)
  #getEntitySuggestion($documentReference $suggestion)
  #set ($targetDoc = $xwiki.getDocument($documentReference))
  #if ($targetDoc.getObject('XWiki.XWikiUsers'))
    #getUserAvatarURL($documentReference $avatarURL 30)
    #if ($avatarURL.specified)
      #set ($suggestion.iconURL = $avatarURL.url)
      #set ($suggestion.iconClass = '')
    #else
      #setIcon($suggestion 'user')
    #end
    #set ($suggestion.label = $xwiki.getPlainUserName($documentReference))
    ## All the user profiles are in the same location so it doesn't make sense to display it.
    #set ($suggestion.hint = '')
  #else
    #set ($suggestion.label = $targetDoc.plainTitle)
    #setIcon($suggestion, 'page_white')
  #end
#end

#macro (getAttachmentSuggestion $attachmentReference $suggestion)
  #getEntitySuggestion($attachmentReference $suggestion)
  #setIcon($suggestion 'attach')
#end

#macro (getSuggestion $entityReference $suggestion)
  #if ("$!entityReference.type" == 'DOCUMENT')
    #getDocumentSuggestion($entityReference $suggestion)
  #elseif ("$!entityReference.type" == 'ATTACHMENT')
    #getAttachmentSuggestion($entityReference $suggestion)
  #else
    #getEntitySuggestion($entityReference $suggestion)
  #end
#end

#macro (getSuggestions $entityReferences $suggestions)
  #foreach ($entityReference in $entityReferences)
    #set ($suggestion = {})
    #getSuggestion($entityReference $suggestion)
    #set ($discard = $suggestions.add($suggestion))
  #end
#end
{{/velocity}}

{{velocity wiki="false"}}
#set ($input = "$!request.input.trim()")
#if ($input != '')
  #if ($xwiki.exists('XWiki.SuggestSolrMacros'))
    ## Enable prefix search.
    #set ($input = "$input* $input")
  #end
  #set ($suggestions = [])
  #searchDocuments($input 5)
  #getSuggestions($documentReferences $suggestions)
  #searchAttachments($input 5)
  #getSuggestions($attachmentReferences $suggestions)
  #if ($xcontext.action == 'get')
    #set ($discard = $response.setContentType('application/json'))
  #end
  $jsontool.serialize($suggestions)
#end
{{/velocity}}&lt;/content>
&lt;/xwikidoc>@
</versions>
  <parent>Main.WebHome</parent>
  <author>XWiki.SvenHoyer</author>
  <contentAuthor>XWiki.SvenHoyer</contentAuthor>
  <date>1542794837000</date>
  <contentUpdateDate>1542794837000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment>Install extension [org.xwiki.contrib:application-ckeditor-ui/1.25]</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{template name="hierarchy_macros.vm"/}}

{{include reference="XWiki.DocumentTreeMacros"/}}

{{velocity output="false"}}
#macro (setIcon $suggestion $icon)
  #set ($iconMetaData = $services.icon.getMetaData($icon))
  #if ($iconMetaData)
    #set ($suggestion.iconURL = "$!iconMetaData.url")
    #set ($suggestion.iconClass = "$!iconMetaData.cssClass")
  #else
    #set ($suggestion.iconURL = $xwiki.getSkinFile("icons/silk/${icon}.png"))
    #set ($suggestion.iconClass = '')
  #end
#end

#set ($entityTypeToLinkType = {
  'SPACE': 'space',
  'DOCUMENT': 'doc',
  'ATTACHMENT': 'attach'
})

#macro (getEntitySuggestion $entityReference $suggestion)
  #set ($typed = "$entityReference.type" != 'DOCUMENT')
  #set ($hint = "#hierarchy($entityReference {'local': true, 'excludeSelf': true, 'plain': true})")
  #set ($discard = $suggestion.putAll({
    'id': "$entityReference.type.toString().toLowerCase():$services.model.serialize($entityReference, 'default')",
    'url': $xwiki.getURL($entityReference),
    'reference': $services.model.serialize($entityReference, 'compact', $doc.documentReference),
    'type': $entityTypeToLinkType.get($entityReference.type.toString()),
    'typed': "$typed",
    'label': $entityReference.name,
    'hint': $hint.trim()
  }))
#end

#macro (getDocumentSuggestion $documentReference $suggestion)
  #getEntitySuggestion($documentReference $suggestion)
  #set ($targetDoc = $xwiki.getDocument($documentReference))
  #if ($targetDoc.getObject('XWiki.XWikiUsers'))
    #getUserAvatarURL($documentReference $avatarURL 30)
    #if ($avatarURL.specified)
      #set ($suggestion.iconURL = $avatarURL.url)
      #set ($suggestion.iconClass = '')
    #else
      #setIcon($suggestion 'user')
    #end
    #set ($suggestion.label = $xwiki.getPlainUserName($documentReference))
    ## All the user profiles are in the same location so it doesn't make sense to display it.
    #set ($suggestion.hint = '')
  #else
    #set ($suggestion.label = $targetDoc.plainTitle)
    #setIcon($suggestion, 'page_white')
  #end
#end

#macro (getAttachmentSuggestion $attachmentReference $suggestion)
  #getEntitySuggestion($attachmentReference $suggestion)
  #setIcon($suggestion 'attach')
#end

#macro (getSuggestion $entityReference $suggestion)
  #if ("$!entityReference.type" == 'DOCUMENT')
    #getDocumentSuggestion($entityReference $suggestion)
  #elseif ("$!entityReference.type" == 'ATTACHMENT')
    #getAttachmentSuggestion($entityReference $suggestion)
  #else
    #getEntitySuggestion($entityReference $suggestion)
  #end
#end

#macro (getSuggestions $entityReferences $suggestions)
  #foreach ($entityReference in $entityReferences)
    #set ($suggestion = {})
    #getSuggestion($entityReference $suggestion)
    #set ($discard = $suggestions.add($suggestion))
  #end
#end
{{/velocity}}

{{velocity wiki="false"}}
#set ($input = "$!request.input.trim()")
#if ($input != '')
  #if ($xwiki.exists('XWiki.SuggestSolrMacros'))
    ## Enable prefix search.
    #set ($input = "$input* $input")
  #end
  #set ($suggestions = [])
  #searchDocuments($input 5)
  #getSuggestions($documentReferences $suggestions)
  #searchAttachments($input 5)
  #getSuggestions($attachmentReferences $suggestions)
  #if ($xcontext.action == 'get')
    #set ($discard = $response.setContentType('application/json'))
  #end
  $jsontool.serialize($suggestions)
#end
{{/velocity}}</content>
</xwikidoc>