<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="AppWithinMinutes.VelocityMacros" locale="">
  <web>AppWithinMinutes</web>
  <name>VelocityMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>XWiki.SvenHoyer</creator>
  <creationDate>1555321455000</creationDate>
  <versions>head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2019.04.15.09.44.14;	author XWiki_2ESvenHoyer;	state full;
branches;
next	;


desc
@@


1.1
log
@Install extension [org.xwiki.platform:xwiki-platform-appwithinminutes-ui/11.2]
@
text
@&lt;?xml version='1.1' encoding='UTF-8'?>
&lt;xwikidoc version="1.3" reference="AppWithinMinutes.VelocityMacros" locale="">
  &lt;web>AppWithinMinutes&lt;/web>
  &lt;name>VelocityMacros&lt;/name>
  &lt;language/>
  &lt;defaultLanguage/>
  &lt;translation>0&lt;/translation>
  &lt;creator>XWiki.SvenHoyer&lt;/creator>
  &lt;creationDate>1555321454769&lt;/creationDate>
  &lt;parent>Main.WebHome&lt;/parent>
  &lt;author>XWiki.SvenHoyer&lt;/author>
  &lt;contentAuthor>XWiki.SvenHoyer&lt;/contentAuthor>
  &lt;date>1555321454000&lt;/date>
  &lt;contentUpdateDate>1555321454000&lt;/contentUpdateDate>
  &lt;version>1.1&lt;/version>
  &lt;title/>
  &lt;comment>Install extension [org.xwiki.platform:xwiki-platform-appwithinminutes-ui/11.2]&lt;/comment>
  &lt;minorEdit>false&lt;/minorEdit>
  &lt;syntaxId>xwiki/2.1&lt;/syntaxId>
  &lt;hidden>true&lt;/hidden>
  &lt;content>{{velocity output="false"}}
#macro (getAppReference)
  #set ($appLocalRef = $doc.getValue('dataSpaceName'))
  #if ("$!appLocalRef" != '')
    ## Between 6.3M2 (XWIKI-11249) and 7.3RC1 (XWIKI-12741).
    #set ($appReference = $services.model.resolveSpace($appLocalRef))
  #else
    ## Possible locations:
    ## 1. same space (&amp;lt;6.2M1, XWIKI-8757)
    ## 2. sibling space (between 6.2M1 and 6.3M2)
    ## 3. grand parent space (7.3RC1+)
    #set ($appReferences = [
      $doc.documentReference.parent,
      $services.model.createSpaceReference($stringtool.removeEnd($doc.documentReference.name, 'TemplateProvider'),
        $doc.documentReference.parent.parent),
      $doc.documentReference.parent.parent
    ])
    #foreach ($item in $appReferences)
      #set ($appReference = $item)
      #if ($xwiki.getDocument($appReference).getObject($appDescriptorClassName))
        #break
      #end
    #end
  #end
#end

#macro (getAppTitle)
  #getAppReference
  #set ($appTitle = $xwiki.getDocument($appReference).plainTitle)
#end

#macro (getExpectedAppClassReference $appName $appReference)
  #set ($expectedClassName = "$!{appName}Class")
  #set ($expectedClassLocations = [
    $services.model.createSpaceReference('Code', $appReference),
    $services.model.createSpaceReference("${appReference.name}Code", $appReference.parent),
    $appReference
  ])
  #set ($found = false)
  #foreach ($expectedClassLocation in $expectedClassLocations)
    #set ($expectedClassReference = $services.model.createDocumentReference($expectedClassName,
      $expectedClassLocation))
    #if ($xwiki.exists($expectedClassReference))
      #set ($found = true)
      #break
    #end
  #end
  #if (!$found)
    #set ($expectedClassReference = $NULL)
  #end
#end

#macro (getAppClassReference $appHomePage)
  #set ($appName = $appHomePage.pageReference.name)
  #set ($appReference = $appHomePage.documentReference.parent)
  ## Look for the application class in the expected location.
  #getExpectedAppClassReference($appName $appReference)
  #if ($expectedClassReference)
    #set ($classReference = $expectedClassReference)
  #else
    ## The application was probably moved or renamed.
    ## The configured class reference is relative to the application home page (holding the application descriptor).
    #set ($configuredClassReference = $services.model.resolveDocument("$!appHomePage.getValue('class')",
      $appHomePage.documentReference))
    #set ($previousAppName = $stringtool.removeEnd($configuredClassReference.name, 'Class'))
    ## Look for a class with the previous name in the current location.
    #getExpectedAppClassReference($previousAppName $appReference)
    #if ($expectedClassReference)
      #set ($classReference = $expectedClassReference)
    #else
      ## Use the configured class.
      #set ($classReference = $configuredClassReference)
    #end
  #end
#end
{{/velocity}}&lt;/content>
&lt;/xwikidoc>@
</versions>
  <parent>Main.WebHome</parent>
  <author>XWiki.SvenHoyer</author>
  <contentAuthor>XWiki.SvenHoyer</contentAuthor>
  <date>1555321454000</date>
  <contentUpdateDate>1555321454000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment>Install extension [org.xwiki.platform:xwiki-platform-appwithinminutes-ui/11.2]</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro (getAppReference)
  #set ($appLocalRef = $doc.getValue('dataSpaceName'))
  #if ("$!appLocalRef" != '')
    ## Between 6.3M2 (XWIKI-11249) and 7.3RC1 (XWIKI-12741).
    #set ($appReference = $services.model.resolveSpace($appLocalRef))
  #else
    ## Possible locations:
    ## 1. same space (&lt;6.2M1, XWIKI-8757)
    ## 2. sibling space (between 6.2M1 and 6.3M2)
    ## 3. grand parent space (7.3RC1+)
    #set ($appReferences = [
      $doc.documentReference.parent,
      $services.model.createSpaceReference($stringtool.removeEnd($doc.documentReference.name, 'TemplateProvider'),
        $doc.documentReference.parent.parent),
      $doc.documentReference.parent.parent
    ])
    #foreach ($item in $appReferences)
      #set ($appReference = $item)
      #if ($xwiki.getDocument($appReference).getObject($appDescriptorClassName))
        #break
      #end
    #end
  #end
#end

#macro (getAppTitle)
  #getAppReference
  #set ($appTitle = $xwiki.getDocument($appReference).plainTitle)
#end

#macro (getExpectedAppClassReference $appName $appReference)
  #set ($expectedClassName = "$!{appName}Class")
  #set ($expectedClassLocations = [
    $services.model.createSpaceReference('Code', $appReference),
    $services.model.createSpaceReference("${appReference.name}Code", $appReference.parent),
    $appReference
  ])
  #set ($found = false)
  #foreach ($expectedClassLocation in $expectedClassLocations)
    #set ($expectedClassReference = $services.model.createDocumentReference($expectedClassName,
      $expectedClassLocation))
    #if ($xwiki.exists($expectedClassReference))
      #set ($found = true)
      #break
    #end
  #end
  #if (!$found)
    #set ($expectedClassReference = $NULL)
  #end
#end

#macro (getAppClassReference $appHomePage)
  #set ($appName = $appHomePage.pageReference.name)
  #set ($appReference = $appHomePage.documentReference.parent)
  ## Look for the application class in the expected location.
  #getExpectedAppClassReference($appName $appReference)
  #if ($expectedClassReference)
    #set ($classReference = $expectedClassReference)
  #else
    ## The application was probably moved or renamed.
    ## The configured class reference is relative to the application home page (holding the application descriptor).
    #set ($configuredClassReference = $services.model.resolveDocument("$!appHomePage.getValue('class')",
      $appHomePage.documentReference))
    #set ($previousAppName = $stringtool.removeEnd($configuredClassReference.name, 'Class'))
    ## Look for a class with the previous name in the current location.
    #getExpectedAppClassReference($previousAppName $appReference)
    #if ($expectedClassReference)
      #set ($classReference = $expectedClassReference)
    #else
      ## Use the configured class.
      #set ($classReference = $configuredClassReference)
    #end
  #end
#end
{{/velocity}}</content>
</xwikidoc>